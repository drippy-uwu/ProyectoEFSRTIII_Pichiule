-- borra la bd si existe
DROP DATABASE IF EXISTS crm_reclamos;
-- creamos la bd
CREATE DATABASE crm_reclamos;
-- activamos la bd
USE crm_reclamos;

CREATE TABLE tb_tipo_documento(
id_tipoDoc  int auto_increment,
des_tipoDoc varchar(200) ,
primary key (id_tipoDoc)
);


insert into tb_tipo_documento values (null,'DNI');
insert into tb_tipo_documento values (null,'CARNET EXTRANJERÍA');
insert into tb_tipo_documento values (null,'PASAPORTE'); 

-- Creación de la tabla tb_usuarios
CREATE TABLE tb_usuario (
    id_usuario INT PRIMARY KEY AUTO_INCREMENT,
    nombreUsuario VARCHAR(50) NOT NULL,
    contrasena VARCHAR(50) NOT NULL,
    estado   int(1) DEFAULT 1 
);


-- Creación de la tabla tb_cliente
CREATE TABLE tb_cliente(
id_cliente  int auto_increment,
id_tipoDoc int,
num_documento   varchar(50),
nombre  varchar(200),
ape_pat varchar(200),
ape_mat varchar(200),
fec_nacimiento date,
email varchar(200),
id_usuario int,
primary key (id_cliente),
FOREIGN KEY (id_tipoDoc) REFERENCES tb_tipo_documento(id_tipoDoc),
FOREIGN KEY (id_usuario) REFERENCES tb_usuario(id_usuario) 
);


-- Inserts de ejemplo en tb_usuarios
INSERT INTO tb_usuario (nombreUsuario, contrasena,estado) VALUES ('jruiz', '123456',  1);
INSERT INTO tb_usuario (nombreUsuario, contrasena,estado) VALUES ('mtorres', '123456',  1);
INSERT INTO tb_usuario (nombreUsuario, contrasena,estado) VALUES ('amino', '123456',  1);
INSERT INTO tb_usuario (nombreUsuario, contrasena,estado) VALUES ('xtrujillo', '123456',  1);
INSERT INTO tb_usuario (nombreUsuario, contrasena,estado) VALUES ('plopez', '123456',  1);
INSERT INTO tb_usuario (nombreUsuario, contrasena,estado) VALUES ('rarnez', '123456',  1);
INSERT INTO tb_usuario (nombreUsuario, contrasena,estado) VALUES ('mpalomino', '123456',  1);

-- Inserts de ejemplo en tb_cliente
INSERT INTO `crm_reclamos`.`tb_cliente` (`id_tipoDoc`, `num_documento`, `nombre`, `ape_pat`, `ape_mat`, `fec_nacimiento`, `email`,`id_usuario`) VALUES ('1', '40502030', 'Juan', 'Palacios', 'Ruiz', '1975-01-02', 'jpalacios@gmail.com',1);
INSERT INTO `crm_reclamos`.`tb_cliente` (`id_tipoDoc`, `num_documento`, `nombre`, `ape_pat`, `ape_mat`, `fec_nacimiento`, `email`,`id_usuario`) VALUES ('1', '41457849', 'María', 'Torres', 'Flores', '1980-06-06', 'mtorres@hotmail.com',2);
INSERT INTO `crm_reclamos`.`tb_cliente` (`id_tipoDoc`, `num_documento`, `nombre`, `ape_pat`, `ape_mat`, `fec_nacimiento`, `email`,`id_usuario`) VALUES ('1', '48451237', 'Aida', 'Mino', 'Vargas', '1983-12-30', 'amino@gmail.com',3);
INSERT INTO `crm_reclamos`.`tb_cliente` (`id_tipoDoc`, `num_documento`, `nombre`, `ape_pat`, `ape_mat`, `fec_nacimiento`, `email`,`id_usuario`) VALUES ('2', '0012455', 'Ximena', 'Trujillo', 'Porras', '1990-10-10', 'xtrujillo@gmail.com',4);
INSERT INTO `crm_reclamos`.`tb_cliente` (`id_tipoDoc`, `num_documento`, `nombre`, `ape_pat`, `ape_mat`, `fec_nacimiento`, `email`,`id_usuario`) VALUES ('2', '0007894', 'Patricia', 'Lopez', 'Rivera', '1980-10-19', 'plopez@hotmail.com',5);
INSERT INTO `crm_reclamos`.`tb_cliente` (`id_tipoDoc`, `num_documento`, `nombre`, `ape_pat`, `ape_mat`, `fec_nacimiento`, `email`,`id_usuario`) VALUES ('3', '61417851', 'Roberto', 'Arnez', 'Pajuelo', '1965-05-20', 'rpajuelo@gmail.com',6);
INSERT INTO `crm_reclamos`.`tb_cliente` (`id_tipoDoc`, `num_documento`, `nombre`, `ape_pat`, `ape_mat`, `fec_nacimiento`, `email`,`id_usuario`) VALUES ('3', '12457899', 'Marisol', 'Palomino', 'Suarez', '1980-06-14', 'mpalomino@hotmail.com',7);



-- Inserts de ejemplo en tb_motivo_reclamo
CREATE TABLE tb_motivo_reclamo(
id_motivo INT PRIMARY KEY AUTO_INCREMENT, 
des_motivo VARCHAR(200) NOT NULL  
);


INSERT INTO tb_motivo_reclamo (des_motivo) VALUES ('Problema de conexión');
INSERT INTO tb_motivo_reclamo (des_motivo) VALUES ('Facturación incorrecta');
INSERT INTO tb_motivo_reclamo (des_motivo) VALUES ('Mala calidad de servicio');
INSERT INTO tb_motivo_reclamo (des_motivo) VALUES ('Cambio no autorizado de plan');
INSERT INTO tb_motivo_reclamo (des_motivo) VALUES ('Cobertura insuficiente');
INSERT INTO tb_motivo_reclamo (des_motivo) VALUES ('Servicio al cliente deficiente');

-- Inserts de ejemplo en tb_reclamo
CREATE TABLE tb_reclamo(
id_reclamo  INT PRIMARY KEY AUTO_INCREMENT,
id_motivo int,
id_cliente  int,
fec_reclamo date,
des_reclamo VARCHAR(200) NOT NULL,
estado   int(1) DEFAULT 1  ,
FOREIGN KEY (id_cliente) REFERENCES tb_cliente(id_cliente) ,
FOREIGN KEY (id_motivo) REFERENCES tb_motivo_reclamo(id_motivo) 
);


INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (1, 1, '2023-06-01', 'Problema con la conexión telefónica',1);
INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (2, 1, '2023-06-06', 'La facturación del mes de mayo no esta bien calculada',1);
INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (1, 1, '2023-06-15', 'Problema con la conexión telefónica',1);


INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (4, 2, '2023-05-10', 'Cambiaron el plan de telefonía sin autorización del cliente',1);
INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (5, 2, '2023-06-06', 'La red de telefonía no llega al distrito de Hurahucho en Tarma',1);
INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (6, 2, '2023-06-15', 'El servicio brindado en la agencia Lima Centro Cívico fue deficiente',1);


INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (1, 3, '2023-06-16', 'Cambiaron el plan de telefonía sin autorización del cliente',1);

INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (2, 4, '2023-06-17', 'La facturación del mes de mayo no esta bien calculada',1);


INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (1, 5, '2023-06-17', 'Problema con la conexión telefónica',1);

INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (6, 6, '2023-06-18', 'El servicio brindado en la agencia Lima Norte fue deficiente',1);

INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (1, 7, '2023-06-20', 'Problema con la conexión telefónica',1);

INSERT INTO `crm_reclamos`.`tb_reclamo` (`id_motivo`, `id_cliente`, `fec_reclamo`, `des_reclamo`, `estado`) 
VALUES (2, 8, '2023-06-20', 'Problema con la conexión telefónica',1);


-- ------------------PROCEDIMIENTOS--------------------------------------------
-- LOGEOUSUARIO
drop procedure if exists logearUsuario;
delimiter @@
create procedure logearUsuario (
in nombreUsuario varchar (50),
in contrasena varchar (50))
 begin 
    select *
    from tb_usuario u inner join tb_cliente c 
    on  u.id_usuario = c.id_usuario
    where u.nombreUsuario = nombreUsuario and u.contrasena = contrasena;
 end @@
 delimiter ;
 

-- -----------LISTAR TIPO
drop procedure if exists listarTipo;
delimiter @@
create procedure listarTipo ()
begin
	select * from tb_tipo_documento;
end @@
delimiter ;


-- ---------LISTAR RECLAMOS
drop procedure if exists listarReclamos;
delimiter @@
create procedure listarReclamos (
	idCliente int)
begin
	select r.id_reclamo,  r.fec_reclamo, m.des_motivo, r.des_reclamo
    from tb_reclamo r inner join tb_motivo_reclamo m
    on r.id_motivo = m.id_motivo
    where idCliente = id_Cliente;
end @@
delimiter ;
-- call listarReclamos (1)

-- --------REGISTRAR USUARIO
drop procedure if exists registrarUsuario;
delimiter @@
create procedure registrarUsuario(
	nombre varchar(50), 
    contra varchar(50))
begin
   insert into tb_usuario values(null,nombre , contra , default);
end @@
delimiter ;

-- call registrarUsuario ("droppy","Pichiule")

-- --------REGISTRAR CLIENTE
DROP PROCEDURE IF EXISTS registrarCliente;
DELIMITER @@
CREATE PROCEDURE registrarCliente( 
    idTipo INT, 
    numDoc VARCHAR(50), 
    nombre VARCHAR(200), 
    apePaterno VARCHAR(200), 
    apeMaterno VARCHAR(200), 
    fecha DATE,
    email varchar (200)
)
BEGIN
	DECLARE idUsuario INT;
	SELECT MAX(id_usuario) INTO idUsuario FROM tb_usuario;
    INSERT INTO tb_cliente VALUES (null,idTipo, numDoc, nombre, apePaterno, apeMaterno, fecha, email, idUsuario);
END @@
DELIMITER ;

-- call registrarCliente (1,'75803088','Brayan','Pichiule','Orellana','2003-06-18', 'brayanpichiule_@hotmail.com')

-- -----------LISTAR MOTIVO
drop procedure if exists listarMotivo;
delimiter @@
create procedure listarMotivo ()
begin
	select * from tb_motivo_reclamo;
end @@
delimiter ;

-- call listarMotivo

-- -----REGISTRAR RECLAMO
drop procedure if exists registrarReclamo;
delimiter @@
create procedure registrarReclamo(
	idMotivo int, 
	idCliente int, 
	fecha date, 
    descrip varchar (200))
begin
   insert into tb_reclamo values(null,idMotivo , idCliente ,fecha,descrip, default);
end @@
delimiter ;

-- call registrarReclamo (1,8,"2003-06-25","Hola papu")

select * from tb_reclamo

-- ---------Buscar Reclamo
drop procedure if exists buscarReclamo;
delimiter @@
create procedure buscarReclamo (
	id int
    )
begin
	select * from tb_reclamo
    where id_reclamo = id;
end @@
delimiter ;
call buscarReclamo (1)

-- -------Actualizar Reclamo
drop procedure if exists actualizarReclamo
delimiter @@
create procedure actualizarReclamo(
	idReclamo int,
	idMotivo int ,
	fecha date, 
	descrip varchar (200)
)
begin
	update tb_reclamo
	 set id_motivo = idMotivo, fec_reclamo = fecha, des_reclamo = descrip
     where id_reclamo = idReclamo;
end @@
delimiter ;

-- call actualizarReclamo (18, 1, "2023-06-18", "Mala gestion")

-- ---- ELIMINAR RECLAMO
drop procedure if exists EliminarReclamo;
delimiter @@
create procedure EliminarReclamo(id int)
begin
   delete from tb_reclamo
   where id_reclamo = id;
end @@
delimiter ;

-- call EliminarReclamo (18);